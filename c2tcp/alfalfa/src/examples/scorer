#!/usr/bin/perl -w

use strict;

my $time = -1;
my $initial_time = -1;
my $last_packet_sent = -1;
my $desired_direction = shift @ARGV;

print STDERR "Looking at direction $desired_direction...\n";

my $used = 0;
my $available = 0;

while ( <> ) {
  chomp;
  my ( $dir, $new_time, $del, $ms_old ) = split /\s+/, $_;

  next unless $dir eq $desired_direction;

  $new_time = int( $new_time * 1000 + 0.5 );

  next unless ( $new_time >= 60000 );

  if ( m{/.*%} ) {
    my ( $dir, $sec, $this_used, $slash, $this_avail ) = split /\s+/, $_;
    $used += $this_used;
    $available += $this_avail;
    next;
  }

  if ( $time == -1 ) {
    $time = $new_time;
    $initial_time = $time;
  }

  while ( $time < $new_time ) {
    my $age = $time - $last_packet_sent;
    printf "%f %d\n", $time, $age;
    $time++;
  }

  my $new_last_packet_sent = $new_time - $ms_old;
  die unless ( $new_last_packet_sent >= $last_packet_sent );
  $last_packet_sent = $new_last_packet_sent;
}

my $total_secs = ($time - $initial_time) / 1000.0;

print STDERR "used: $used, available: $available\n";
printf STDERR "Used %.0f kbps / %.0f kbps => %f %% \n", .001 * $used * 8 / $total_secs,
    .001 * $available * 8 / $total_secs, 100.0 * $used / $available;
